SHORT-TERM TODO:

- make Keymap no longer completely dependent on xmodmap
    (add keysym lookup, xkb support)
    - add xkb support
- finish the bindings and toaruerror macros
- ensure workspace and layouts account for all config keys
    (currently window gaps and focus_follows pointer are not honored)
- make DTiled account for window gaps and borders
- add cfg_attr to all instrument attributes to compile only under debug assertions
- finish implementing the dummy connection
- create an elegant way to handle borders
    (can be integrated with handling window gaps)
- workspace methods to return error?
- Fullscreen toggling (EWMH and manual)
- implement Debug properly for user-facing types
- add hooks to allow users to modify a client before it is mapped
- hooks on grabbing and managing existing windows (startup hooks done)
- make XCBConn and X11RBConn conversion methods more generic
- make keybinds use keysyms and account for modkey state 
    (since some keysyms are only accessible when using modkeys)


LONG-TERM TODO:

- complete the Widget trait
- multi-screen support (set focused screen, assign workspace to screen, etc)
- figure out restarting in-place
- make master a region of windows, instead of one window (implement this as a layout)
- hypothesis-based testing for workspace and window manager functionality
- make this whole project async ;P (this will be fun)
- add multi-display support (via randr)

tests:
- map window, unmap window
- map master, unmap master
- switching workspaces (preserve layout)
- moving windows between workspaces
- toggling between floating and tiling
    - auto-toggling to floating when moved

cool stuff to add:
- Reading window layout from serialized data (hide serde behind feature flag)
- script or build hook to auto-generate desktop file
- dbus interop for various widgets (e.g. mpris)
- mpd client functionality
- wm transient for, firefox video in picture

conventions and rules
- pass windows around by their id
use the id to lookup windows, and instead pass references
to their storage structures
(allows you to mutably borrow windows within a single scope)

multi-screen policy:
    when goto_ws is invoked, if workspace is on different screen,
    the cursor is warped to the workspace
    if the workspace is on the same screen, the current workspace
    is deactivated and the new one takes its place
    
    when fullscreen is toggled, the window takes up the entire screen
    but does not intrude into other workspaces
